// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/heshoots/smbfapi/gen/models"
)

// GetTournamentOKCode is the HTTP code returned for type GetTournamentOK
const GetTournamentOKCode int = 200

/*GetTournamentOK returning tournament

swagger:response getTournamentOK
*/
type GetTournamentOK struct {

	/*
	  In: Body
	*/
	Payload *models.Tournament `json:"body,omitempty"`
}

// NewGetTournamentOK creates GetTournamentOK with default headers values
func NewGetTournamentOK() *GetTournamentOK {

	return &GetTournamentOK{}
}

// WithPayload adds the payload to the get tournament o k response
func (o *GetTournamentOK) WithPayload(payload *models.Tournament) *GetTournamentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tournament o k response
func (o *GetTournamentOK) SetPayload(payload *models.Tournament) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTournamentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTournamentBadRequestCode is the HTTP code returned for type GetTournamentBadRequest
const GetTournamentBadRequestCode int = 400

/*GetTournamentBadRequest bad input parameter

swagger:response getTournamentBadRequest
*/
type GetTournamentBadRequest struct {
}

// NewGetTournamentBadRequest creates GetTournamentBadRequest with default headers values
func NewGetTournamentBadRequest() *GetTournamentBadRequest {

	return &GetTournamentBadRequest{}
}

// WriteResponse to the client
func (o *GetTournamentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
